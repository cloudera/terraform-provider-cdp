// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AWSConfigurationRequest Request object for AWS configuration.
//
// swagger:model AWSConfigurationRequest
type AWSConfigurationRequest struct {

	// The ARN of an IAM instance profile.
	// Required: true
	InstanceProfile *string `json:"instanceProfile"`

	// The location of the S3 bucket to be used as storage. The location has to start with s3a:// followed by the bucket name.
	// Required: true
	StorageBucketLocation *string `json:"storageBucketLocation"`
}

// Validate validates this a w s configuration request
func (m *AWSConfigurationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstanceProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageBucketLocation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AWSConfigurationRequest) validateInstanceProfile(formats strfmt.Registry) error {

	if err := validate.Required("instanceProfile", "body", m.InstanceProfile); err != nil {
		return err
	}

	return nil
}

func (m *AWSConfigurationRequest) validateStorageBucketLocation(formats strfmt.Registry) error {

	if err := validate.Required("storageBucketLocation", "body", m.StorageBucketLocation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this a w s configuration request based on context it is used
func (m *AWSConfigurationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AWSConfigurationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AWSConfigurationRequest) UnmarshalBinary(b []byte) error {
	var res AWSConfigurationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
