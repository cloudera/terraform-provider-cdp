// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImageRequest The image request for the datalake. When the 'runtime' parameter is set, only the 'os' parameter can be provided. Otherwise, you can use 'catalog name' and/or 'id' for selecting an image.
//
// swagger:model ImageRequest
type ImageRequest struct {

	// The name of the custom image catalog to use, defaulting to 'cdp-default' if not present.
	CatalogName *string `json:"catalogName,omitempty"`

	// The image ID from the catalog. The corresponding image will be used for the created cluster machines.
	ID string `json:"id,omitempty"`

	// The OS of the image used for cluster instances.
	Os string `json:"os,omitempty"`
}

// Validate validates this image request
func (m *ImageRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this image request based on context it is used
func (m *ImageRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ImageRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImageRequest) UnmarshalBinary(b []byte) error {
	var res ImageRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
