// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CancelRestoreRequest Details of the restore that has to be cancelled.
//
// swagger:model CancelRestoreRequest
type CancelRestoreRequest struct {

	// Mark the operation as cancelled regardless of the progress.
	Force *bool `json:"force,omitempty"`

	// Restore-id that identifies the restore to be cancelled.
	// Required: true
	RestoreID *string `json:"restoreId"`
}

// Validate validates this cancel restore request
func (m *CancelRestoreRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRestoreID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CancelRestoreRequest) validateRestoreID(formats strfmt.Registry) error {

	if err := validate.Required("restoreId", "body", m.RestoreID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cancel restore request based on context it is used
func (m *CancelRestoreRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CancelRestoreRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CancelRestoreRequest) UnmarshalBinary(b []byte) error {
	var res CancelRestoreRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
