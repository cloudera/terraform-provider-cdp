// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ScaleHorizontallyRequest Data Lake horizontal scaling request.
//
// swagger:model ScaleHorizontallyRequest
type ScaleHorizontallyRequest struct {

	// The name of the Data Lake
	// Required: true
	DatalakeName *string `json:"datalakeName"`

	// The target number of the scaling operation. If the desired count is less than the actual node count the scaling action will be a downscale operation.
	// Required: true
	// Maximum: 40
	// Minimum: 0
	InstanceGroupDesiredCount *int32 `json:"instanceGroupDesiredCount"`

	// The target host group name to be scaled.
	// Required: true
	// Enum: ["solr_scale_out","hms_scale_out","raz_scale_out","kafka_scale_out","storage_scale_out"]
	InstanceGroupName *string `json:"instanceGroupName"`
}

// Validate validates this scale horizontally request
func (m *ScaleHorizontallyRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatalakeName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceGroupDesiredCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceGroupName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ScaleHorizontallyRequest) validateDatalakeName(formats strfmt.Registry) error {

	if err := validate.Required("datalakeName", "body", m.DatalakeName); err != nil {
		return err
	}

	return nil
}

func (m *ScaleHorizontallyRequest) validateInstanceGroupDesiredCount(formats strfmt.Registry) error {

	if err := validate.Required("instanceGroupDesiredCount", "body", m.InstanceGroupDesiredCount); err != nil {
		return err
	}

	if err := validate.MinimumInt("instanceGroupDesiredCount", "body", int64(*m.InstanceGroupDesiredCount), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("instanceGroupDesiredCount", "body", int64(*m.InstanceGroupDesiredCount), 40, false); err != nil {
		return err
	}

	return nil
}

var scaleHorizontallyRequestTypeInstanceGroupNamePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["solr_scale_out","hms_scale_out","raz_scale_out","kafka_scale_out","storage_scale_out"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		scaleHorizontallyRequestTypeInstanceGroupNamePropEnum = append(scaleHorizontallyRequestTypeInstanceGroupNamePropEnum, v)
	}
}

const (

	// ScaleHorizontallyRequestInstanceGroupNameSolrScaleOut captures enum value "solr_scale_out"
	ScaleHorizontallyRequestInstanceGroupNameSolrScaleOut string = "solr_scale_out"

	// ScaleHorizontallyRequestInstanceGroupNameHmsScaleOut captures enum value "hms_scale_out"
	ScaleHorizontallyRequestInstanceGroupNameHmsScaleOut string = "hms_scale_out"

	// ScaleHorizontallyRequestInstanceGroupNameRazScaleOut captures enum value "raz_scale_out"
	ScaleHorizontallyRequestInstanceGroupNameRazScaleOut string = "raz_scale_out"

	// ScaleHorizontallyRequestInstanceGroupNameKafkaScaleOut captures enum value "kafka_scale_out"
	ScaleHorizontallyRequestInstanceGroupNameKafkaScaleOut string = "kafka_scale_out"

	// ScaleHorizontallyRequestInstanceGroupNameStorageScaleOut captures enum value "storage_scale_out"
	ScaleHorizontallyRequestInstanceGroupNameStorageScaleOut string = "storage_scale_out"
)

// prop value enum
func (m *ScaleHorizontallyRequest) validateInstanceGroupNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, scaleHorizontallyRequestTypeInstanceGroupNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ScaleHorizontallyRequest) validateInstanceGroupName(formats strfmt.Registry) error {

	if err := validate.Required("instanceGroupName", "body", m.InstanceGroupName); err != nil {
		return err
	}

	// value enum
	if err := m.validateInstanceGroupNameEnum("instanceGroupName", "body", *m.InstanceGroupName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this scale horizontally request based on context it is used
func (m *ScaleHorizontallyRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ScaleHorizontallyRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ScaleHorizontallyRequest) UnmarshalBinary(b []byte) error {
	var res ScaleHorizontallyRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
