// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SnapshotStatusType Snapshot Status Type.
//
//	`NEW` - Expected when a snapshot request was just requested. `IN_PROGRESS` - When a snapshot request is in progress. `FAILED` - If for any reason a snapshot request has failed. `SUCCESSFUL` - A snapshot request has completed successfully. `LOCKED` - A snapshot exists, but can't be restored or read. `DELETED` - A snapshot existed but was just deleted. `CORRUPT` - A snapshot got corrupted. `DELETING` - A snapshot is being deleted.
//
// swagger:model SnapshotStatusType
type SnapshotStatusType string

func NewSnapshotStatusType(value SnapshotStatusType) *SnapshotStatusType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SnapshotStatusType.
func (m SnapshotStatusType) Pointer() *SnapshotStatusType {
	return &m
}

const (

	// SnapshotStatusTypeNEW captures enum value "NEW"
	SnapshotStatusTypeNEW SnapshotStatusType = "NEW"

	// SnapshotStatusTypeINPROGRESS captures enum value "IN_PROGRESS"
	SnapshotStatusTypeINPROGRESS SnapshotStatusType = "IN_PROGRESS"

	// SnapshotStatusTypeFAILED captures enum value "FAILED"
	SnapshotStatusTypeFAILED SnapshotStatusType = "FAILED"

	// SnapshotStatusTypeSUCCESSFUL captures enum value "SUCCESSFUL"
	SnapshotStatusTypeSUCCESSFUL SnapshotStatusType = "SUCCESSFUL"

	// SnapshotStatusTypeLOCKED captures enum value "LOCKED"
	SnapshotStatusTypeLOCKED SnapshotStatusType = "LOCKED"

	// SnapshotStatusTypeDELETED captures enum value "DELETED"
	SnapshotStatusTypeDELETED SnapshotStatusType = "DELETED"

	// SnapshotStatusTypeCORRUPT captures enum value "CORRUPT"
	SnapshotStatusTypeCORRUPT SnapshotStatusType = "CORRUPT"

	// SnapshotStatusTypeDELETING captures enum value "DELETING"
	SnapshotStatusTypeDELETING SnapshotStatusType = "DELETING"

	// SnapshotStatusTypeUNKNOWN captures enum value "UNKNOWN"
	SnapshotStatusTypeUNKNOWN SnapshotStatusType = "UNKNOWN"
)

// for schema
var snapshotStatusTypeEnum []any

func init() {
	var res []SnapshotStatusType
	if err := json.Unmarshal([]byte(`["NEW","IN_PROGRESS","FAILED","SUCCESSFUL","LOCKED","DELETED","CORRUPT","DELETING","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		snapshotStatusTypeEnum = append(snapshotStatusTypeEnum, v)
	}
}

func (m SnapshotStatusType) validateSnapshotStatusTypeEnum(path, location string, value SnapshotStatusType) error {
	if err := validate.EnumCase(path, location, value, snapshotStatusTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this snapshot status type
func (m SnapshotStatusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSnapshotStatusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this snapshot status type based on context it is used
func (m SnapshotStatusType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
