// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/opdb/models"
)

// UpgradeDatabaseReader is a Reader for the UpgradeDatabase structure.
type UpgradeDatabaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpgradeDatabaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpgradeDatabaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpgradeDatabaseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpgradeDatabaseOK creates a UpgradeDatabaseOK with default headers values
func NewUpgradeDatabaseOK() *UpgradeDatabaseOK {
	return &UpgradeDatabaseOK{}
}

/*
UpgradeDatabaseOK describes a response with status code 200, with default header values.

Expected response to a valid request.
*/
type UpgradeDatabaseOK struct {
	Payload *models.UpgradeDatabaseResponse
}

// IsSuccess returns true when this upgrade database o k response has a 2xx status code
func (o *UpgradeDatabaseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upgrade database o k response has a 3xx status code
func (o *UpgradeDatabaseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upgrade database o k response has a 4xx status code
func (o *UpgradeDatabaseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upgrade database o k response has a 5xx status code
func (o *UpgradeDatabaseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upgrade database o k response a status code equal to that given
func (o *UpgradeDatabaseOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upgrade database o k response
func (o *UpgradeDatabaseOK) Code() int {
	return 200
}

func (o *UpgradeDatabaseOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/opdb/upgradeDatabase][%d] upgradeDatabaseOK %s", 200, payload)
}

func (o *UpgradeDatabaseOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/opdb/upgradeDatabase][%d] upgradeDatabaseOK %s", 200, payload)
}

func (o *UpgradeDatabaseOK) GetPayload() *models.UpgradeDatabaseResponse {
	return o.Payload
}

func (o *UpgradeDatabaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpgradeDatabaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpgradeDatabaseDefault creates a UpgradeDatabaseDefault with default headers values
func NewUpgradeDatabaseDefault(code int) *UpgradeDatabaseDefault {
	return &UpgradeDatabaseDefault{
		_statusCode: code,
	}
}

/*
UpgradeDatabaseDefault describes a response with status code -1, with default header values.

The default response on an error.
*/
type UpgradeDatabaseDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this upgrade database default response has a 2xx status code
func (o *UpgradeDatabaseDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this upgrade database default response has a 3xx status code
func (o *UpgradeDatabaseDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this upgrade database default response has a 4xx status code
func (o *UpgradeDatabaseDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this upgrade database default response has a 5xx status code
func (o *UpgradeDatabaseDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this upgrade database default response a status code equal to that given
func (o *UpgradeDatabaseDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the upgrade database default response
func (o *UpgradeDatabaseDefault) Code() int {
	return o._statusCode
}

func (o *UpgradeDatabaseDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/opdb/upgradeDatabase][%d] upgradeDatabase default %s", o._statusCode, payload)
}

func (o *UpgradeDatabaseDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/opdb/upgradeDatabase][%d] upgradeDatabase default %s", o._statusCode, payload)
}

func (o *UpgradeDatabaseDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpgradeDatabaseDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
