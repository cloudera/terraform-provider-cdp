// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpgradeServiceRequest Request object for upgrading a service.
//
// swagger:model UpgradeServiceRequest
type UpgradeServiceRequest struct {

	// Cluster ID of the service to upgrade.
	// Required: true
	ClusterID *string `json:"clusterId"`

	// The maintenance step to be performed. Currently supported steps are prepare, backup, upgrade, cancel and resume.
	// Required: true
	// Enum: ["prepare","backup","upgrade","cancel","resume"]
	Step *string `json:"step"`
}

// Validate validates this upgrade service request
func (m *UpgradeServiceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStep(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpgradeServiceRequest) validateClusterID(formats strfmt.Registry) error {

	if err := validate.Required("clusterId", "body", m.ClusterID); err != nil {
		return err
	}

	return nil
}

var upgradeServiceRequestTypeStepPropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["prepare","backup","upgrade","cancel","resume"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		upgradeServiceRequestTypeStepPropEnum = append(upgradeServiceRequestTypeStepPropEnum, v)
	}
}

const (

	// UpgradeServiceRequestStepPrepare captures enum value "prepare"
	UpgradeServiceRequestStepPrepare string = "prepare"

	// UpgradeServiceRequestStepBackup captures enum value "backup"
	UpgradeServiceRequestStepBackup string = "backup"

	// UpgradeServiceRequestStepUpgrade captures enum value "upgrade"
	UpgradeServiceRequestStepUpgrade string = "upgrade"

	// UpgradeServiceRequestStepCancel captures enum value "cancel"
	UpgradeServiceRequestStepCancel string = "cancel"

	// UpgradeServiceRequestStepResume captures enum value "resume"
	UpgradeServiceRequestStepResume string = "resume"
)

// prop value enum
func (m *UpgradeServiceRequest) validateStepEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, upgradeServiceRequestTypeStepPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpgradeServiceRequest) validateStep(formats strfmt.Registry) error {

	if err := validate.Required("step", "body", m.Step); err != nil {
		return err
	}

	// value enum
	if err := m.validateStepEnum("step", "body", *m.Step); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this upgrade service request based on context it is used
func (m *UpgradeServiceRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpgradeServiceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpgradeServiceRequest) UnmarshalBinary(b []byte) error {
	var res UpgradeServiceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
