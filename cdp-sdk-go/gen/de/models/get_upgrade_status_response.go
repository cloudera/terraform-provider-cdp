// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetUpgradeStatusResponse Response object for GetUpgradeStatus request.
//
// swagger:model GetUpgradeStatusResponse
type GetUpgradeStatusResponse struct {

	// Whether all the steps of the multi-step upgrade process completed.
	AllStepsCompleted bool `json:"allStepsCompleted,omitempty"`

	// The next step to take in multi-step upgrade process. Currently supported steps are prepare, backup, upgrade and resume.
	// Enum: ["prepare","backup","upgrade","resume"]
	NextStep string `json:"nextStep,omitempty"`

	// The status of the upgrade.
	UpgradeStatusMessage string `json:"upgradeStatusMessage,omitempty"`
}

// Validate validates this get upgrade status response
func (m *GetUpgradeStatusResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNextStep(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getUpgradeStatusResponseTypeNextStepPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["prepare","backup","upgrade","resume"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getUpgradeStatusResponseTypeNextStepPropEnum = append(getUpgradeStatusResponseTypeNextStepPropEnum, v)
	}
}

const (

	// GetUpgradeStatusResponseNextStepPrepare captures enum value "prepare"
	GetUpgradeStatusResponseNextStepPrepare string = "prepare"

	// GetUpgradeStatusResponseNextStepBackup captures enum value "backup"
	GetUpgradeStatusResponseNextStepBackup string = "backup"

	// GetUpgradeStatusResponseNextStepUpgrade captures enum value "upgrade"
	GetUpgradeStatusResponseNextStepUpgrade string = "upgrade"

	// GetUpgradeStatusResponseNextStepResume captures enum value "resume"
	GetUpgradeStatusResponseNextStepResume string = "resume"
)

// prop value enum
func (m *GetUpgradeStatusResponse) validateNextStepEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getUpgradeStatusResponseTypeNextStepPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GetUpgradeStatusResponse) validateNextStep(formats strfmt.Registry) error {
	if swag.IsZero(m.NextStep) { // not required
		return nil
	}

	// value enum
	if err := m.validateNextStepEnum("nextStep", "body", m.NextStep); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get upgrade status response based on context it is used
func (m *GetUpgradeStatusResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetUpgradeStatusResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetUpgradeStatusResponse) UnmarshalBinary(b []byte) error {
	var res GetUpgradeStatusResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
