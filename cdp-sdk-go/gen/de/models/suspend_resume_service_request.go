// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SuspendResumeServiceRequest Request object for suspending/resuming a service.
//
// swagger:model SuspendResumeServiceRequest
type SuspendResumeServiceRequest struct {

	// Cluster ID of the service to suspend/resume.
	// Required: true
	ClusterID *string `json:"clusterId"`

	// Reason for suspending the service. This is needed only with PREPARE step.
	Message string `json:"message,omitempty"`

	// The particular step to be performed. Use get-suspend-resume-status to know what is the next step to take.
	// Required: true
	// Enum: ["PREPARE","SUSPEND","RESUME","QUIT"]
	Step *string `json:"step"`
}

// Validate validates this suspend resume service request
func (m *SuspendResumeServiceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStep(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SuspendResumeServiceRequest) validateClusterID(formats strfmt.Registry) error {

	if err := validate.Required("clusterId", "body", m.ClusterID); err != nil {
		return err
	}

	return nil
}

var suspendResumeServiceRequestTypeStepPropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PREPARE","SUSPEND","RESUME","QUIT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		suspendResumeServiceRequestTypeStepPropEnum = append(suspendResumeServiceRequestTypeStepPropEnum, v)
	}
}

const (

	// SuspendResumeServiceRequestStepPREPARE captures enum value "PREPARE"
	SuspendResumeServiceRequestStepPREPARE string = "PREPARE"

	// SuspendResumeServiceRequestStepSUSPEND captures enum value "SUSPEND"
	SuspendResumeServiceRequestStepSUSPEND string = "SUSPEND"

	// SuspendResumeServiceRequestStepRESUME captures enum value "RESUME"
	SuspendResumeServiceRequestStepRESUME string = "RESUME"

	// SuspendResumeServiceRequestStepQUIT captures enum value "QUIT"
	SuspendResumeServiceRequestStepQUIT string = "QUIT"
)

// prop value enum
func (m *SuspendResumeServiceRequest) validateStepEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, suspendResumeServiceRequestTypeStepPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SuspendResumeServiceRequest) validateStep(formats strfmt.Registry) error {

	if err := validate.Required("step", "body", m.Step); err != nil {
		return err
	}

	// value enum
	if err := m.validateStepEnum("step", "body", *m.Step); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this suspend resume service request based on context it is used
func (m *SuspendResumeServiceRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SuspendResumeServiceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SuspendResumeServiceRequest) UnmarshalBinary(b []byte) error {
	var res SuspendResumeServiceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
