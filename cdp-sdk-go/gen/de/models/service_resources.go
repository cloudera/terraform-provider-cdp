// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceResources Object to store resources for a CDE service.
//
// swagger:model ServiceResources
type ServiceResources struct {

	// CPU Requests for the entire CDE service quota.
	CPURequests string `json:"cpuRequests,omitempty"`

	// GPU requests for the entire CDE service quota.
	GpuRequests string `json:"gpuRequests,omitempty"`

	// Initial instances for the CDE service.
	InitialInstances string `json:"initial_instances,omitempty"`

	// Initial Spot Instances for the CDE Service.
	InitialSpotInstances string `json:"initial_spot_instances,omitempty"`

	// Instance type of the CDE service.
	InstanceType string `json:"instance_type,omitempty"`

	// Maximum instances for the CDE service.
	MaxInstances string `json:"max_instances,omitempty"`

	// Maximum Number of Spot instances.
	MaxSpotInstances string `json:"max_spot_instances,omitempty"`

	// Memory requests for the entire CDE service quota, eg. 100Gi.
	MemoryRequests string `json:"memoryRequests,omitempty"`

	// Minimum Instances for the CDE service.
	MinInstances string `json:"min_instances,omitempty"`

	// Minimum number of spot instances for the CDE service.
	MinSpotInstances string `json:"min_spot_instances,omitempty"`

	// Resource Pool for the CDE service.
	ResourcePool string `json:"resourcePool,omitempty"`

	// Root Volume Size.
	RootVolSize string `json:"root_vol_size,omitempty"`
}

// Validate validates this service resources
func (m *ServiceResources) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service resources based on context it is used
func (m *ServiceResources) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceResources) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceResources) UnmarshalBinary(b []byte) error {
	var res ServiceResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
