// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HiveCreateDiagnosticDataDownloadOptions DEPRECATED: Included by default, no need to specify
//
// swagger:model HiveCreateDiagnosticDataDownloadOptions
type HiveCreateDiagnosticDataDownloadOptions struct {

	// DEPRECATED: Included by default, no need to specify
	IncludeComputeResourceInfo *bool `json:"includeComputeResourceInfo,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeErrordump *bool `json:"includeErrordump,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeGclogs *bool `json:"includeGclogs,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeHeapdump *bool `json:"includeHeapdump,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeHms *bool `json:"includeHms,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeKubernetesResourceInfo *bool `json:"includeKubernetesResourceInfo,omitempty"`

	// DEPRECATED: Included by default, no need to specify
	IncludeLogs *bool `json:"includeLogs,omitempty"`
}

// Validate validates this hive create diagnostic data download options
func (m *HiveCreateDiagnosticDataDownloadOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hive create diagnostic data download options based on context it is used
func (m *HiveCreateDiagnosticDataDownloadOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HiveCreateDiagnosticDataDownloadOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HiveCreateDiagnosticDataDownloadOptions) UnmarshalBinary(b []byte) error {
	var res HiveCreateDiagnosticDataDownloadOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
