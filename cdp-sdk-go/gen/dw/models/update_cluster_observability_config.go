// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateClusterObservabilityConfig Cluster observability settings to update.
//
// swagger:model UpdateClusterObservabilityConfig
type UpdateClusterObservabilityConfig struct {

	// Create the log forwarding configuration in a valid fluentd format. Then that configuration is later inserted into a larger fluentd configuration.
	LogsForwardingConfig string `json:"logsForwardingConfig,omitempty"`

	// Set the proxy CA certificates (PEM Bundle). If you use a TLS-terminating proxy server to inspect outbound internet traffic, you need to provide the proxy server's CA certificates bundle in PEM bundle format when you configure log forwarding.
	ProxyCABundle string `json:"proxyCABundle,omitempty"`
}

// Validate validates this update cluster observability config
func (m *UpdateClusterObservabilityConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update cluster observability config based on context it is used
func (m *UpdateClusterObservabilityConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateClusterObservabilityConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateClusterObservabilityConfig) UnmarshalBinary(b []byte) error {
	var res UpdateClusterObservabilityConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
