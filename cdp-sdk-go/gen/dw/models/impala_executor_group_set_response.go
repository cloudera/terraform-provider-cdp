// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImpalaExecutorGroupSetResponse Describes configurations for an executor group set.
//
// swagger:model ImpalaExecutorGroupSetResponse
type ImpalaExecutorGroupSetResponse struct {

	// Auto suspend threshold.
	AutoSuspendTimeoutSeconds int32 `json:"autoSuspendTimeoutSeconds"`

	// Denotes whether auto suspend is turned off.
	DisableAutoSuspend bool `json:"disableAutoSuspend"`

	// Number of executors per executor group.
	ExecGroupSize int32 `json:"execGroupSize"`

	// Name of resource pool for this executor group set.
	GroupSetPrefix string `json:"groupSetPrefix"`

	// Maximum number of executor groups allowed.
	MaxExecutorGroups int32 `json:"maxExecutorGroups"`

	// Minimum number of executor groups allowed.
	MinExecutorGroups int32 `json:"minExecutorGroups"`

	// Scale down threshold in seconds.
	TriggerScaleDownDelay int32 `json:"triggerScaleDownDelay"`

	// Scale up threshold in seconds.
	TriggerScaleUpDelay int32 `json:"triggerScaleUpDelay"`
}

// Validate validates this impala executor group set response
func (m *ImpalaExecutorGroupSetResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this impala executor group set response based on context it is used
func (m *ImpalaExecutorGroupSetResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ImpalaExecutorGroupSetResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImpalaExecutorGroupSetResponse) UnmarshalBinary(b []byte) error {
	var res ImpalaExecutorGroupSetResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
