// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomRegistryOptions Options for custom ACR, ECR, or Docker registry.
//
// swagger:model CustomRegistryOptions
type CustomRegistryOptions struct {

	// Disable image verification.
	DisableImageVerification bool `json:"disableImageVerification,omitempty"`

	// Password for custom registry access (required only for Docker type).
	Password string `json:"password,omitempty"`

	// Custom registry type.
	// Enum: [ACR ECR Docker]
	RegistryType string `json:"registryType,omitempty"`

	// URL of the custom image repository.
	RepositoryURL string `json:"repositoryUrl,omitempty"`

	// Username for custom registry access (required only for Docker type).
	UserName string `json:"userName,omitempty"`
}

// Validate validates this custom registry options
func (m *CustomRegistryOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRegistryType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var customRegistryOptionsTypeRegistryTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACR","ECR","Docker"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customRegistryOptionsTypeRegistryTypePropEnum = append(customRegistryOptionsTypeRegistryTypePropEnum, v)
	}
}

const (

	// CustomRegistryOptionsRegistryTypeACR captures enum value "ACR"
	CustomRegistryOptionsRegistryTypeACR string = "ACR"

	// CustomRegistryOptionsRegistryTypeECR captures enum value "ECR"
	CustomRegistryOptionsRegistryTypeECR string = "ECR"

	// CustomRegistryOptionsRegistryTypeDocker captures enum value "Docker"
	CustomRegistryOptionsRegistryTypeDocker string = "Docker"
)

// prop value enum
func (m *CustomRegistryOptions) validateRegistryTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, customRegistryOptionsTypeRegistryTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CustomRegistryOptions) validateRegistryType(formats strfmt.Registry) error {
	if swag.IsZero(m.RegistryType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRegistryTypeEnum("registryType", "body", m.RegistryType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this custom registry options based on context it is used
func (m *CustomRegistryOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustomRegistryOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomRegistryOptions) UnmarshalBinary(b []byte) error {
	var res CustomRegistryOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
