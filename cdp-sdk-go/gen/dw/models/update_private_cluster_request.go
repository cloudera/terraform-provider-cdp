// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdatePrivateClusterRequest Request object for the updatePrivateCluster method.
//
// swagger:model UpdatePrivateClusterRequest
type UpdatePrivateClusterRequest struct {

	// The ID of the Private Cloud cluster to update.
	// Required: true
	ClusterID *string `json:"clusterId"`

	// DEPRECATED: As of 1.5.5, this feature flag can be set as an advanced configuration. Enable to use dedicated nodes exclusively for executors and coordinators, and improve performance. You can enable this only if you reserved nodes while adding a CDP Private Cloud containerized ECS cluster. When disabled, non-compute pods such as MetaStore and Data Visualization can also use the reserved nodes.
	DedicatedExecutorNodes bool `json:"dedicatedExecutorNodes,omitempty"`

	// DEPRECATED: As of PVC 1.5.4 we no longer use delegation user. The password to update for delegation user. Setting it to the same value as the existing password will be a no-op.
	DelegationPassword string `json:"delegationPassword,omitempty"`

	// DEPRECATED: As of PVC 1.5.4 we no longer use delegation user. The user name to update for delegation user. Setting it to the same value as the existing delegation user name will be a no-op.
	DelegationUsername string `json:"delegationUsername,omitempty"`

	// Cluster description.
	Description string `json:"description,omitempty"`
}

// Validate validates this update private cluster request
func (m *UpdatePrivateClusterRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdatePrivateClusterRequest) validateClusterID(formats strfmt.Registry) error {

	if err := validate.Required("clusterId", "body", m.ClusterID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update private cluster request based on context it is used
func (m *UpdatePrivateClusterRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdatePrivateClusterRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdatePrivateClusterRequest) UnmarshalBinary(b []byte) error {
	var res UpdatePrivateClusterRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
