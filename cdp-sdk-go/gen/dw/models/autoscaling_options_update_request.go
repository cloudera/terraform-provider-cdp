// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AutoscalingOptionsUpdateRequest Auto-scaling configuration for a Virtual Warehouse. Provide those values only that you want to update.
//
// swagger:model AutoscalingOptionsUpdateRequest
type AutoscalingOptionsUpdateRequest struct {

	// Auto suspend threshold for Virtual Warehouse.
	AutoSuspendTimeoutSeconds int32 `json:"autoSuspendTimeoutSeconds,omitempty"`

	// Turn off auto suspend for Virtual Warehouse.
	DisableAutoSuspend bool `json:"disableAutoSuspend,omitempty"`

	// Set Desired free capacity. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided.
	HiveDesiredFreeCapacity int32 `json:"hiveDesiredFreeCapacity,omitempty"`

	// Set wait time before a scale event happens. Either "hiveScaleWaitTimeSeconds" or "hiveDesiredFreeCapacity" can be provided. If "hiveScaleWaitTimeSeconds" provided, then the "hiveDesiredFreeCapacity" will be explicityly set to 0.
	HiveScaleWaitTimeSeconds int32 `json:"hiveScaleWaitTimeSeconds,omitempty"`

	// Re-configures executor group sets for workload aware autoscaling.
	ImpalaExecutorGroupSets *ImpalaExecutorGroupSetsUpdateRequest `json:"impalaExecutorGroupSets,omitempty"`

	// DEPRECATED in favor of the top level impalaHASettings object. Number of the active coordinators.
	ImpalaNumOfActiveCoordinators int32 `json:"impalaNumOfActiveCoordinators,omitempty"`

	// Scale down threshold in seconds.
	ImpalaScaleDownDelaySeconds int32 `json:"impalaScaleDownDelaySeconds,omitempty"`

	// Scale up the scaling up threshold in seconds.
	ImpalaScaleUpDelaySeconds int32 `json:"impalaScaleUpDelaySeconds,omitempty"`

	// DEPRECATED in favor of the top level impalaHASettings object. Delay in seconds before the shutdown of coordinator event happens.
	ImpalaShutdownOfCoordinatorDelaySeconds int32 `json:"impalaShutdownOfCoordinatorDelaySeconds,omitempty"`

	// Maximum number of available compute groups. Zero means, the maxClusters will not be updated..
	MaxClusters int32 `json:"maxClusters,omitempty"`

	// Minimum number of available compute groups. Zero means, the minClusters will not be updated.
	MinClusters int32 `json:"minClusters,omitempty"`
}

// Validate validates this autoscaling options update request
func (m *AutoscalingOptionsUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImpalaExecutorGroupSets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AutoscalingOptionsUpdateRequest) validateImpalaExecutorGroupSets(formats strfmt.Registry) error {
	if swag.IsZero(m.ImpalaExecutorGroupSets) { // not required
		return nil
	}

	if m.ImpalaExecutorGroupSets != nil {
		if err := m.ImpalaExecutorGroupSets.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("impalaExecutorGroupSets")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("impalaExecutorGroupSets")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this autoscaling options update request based on the context it is used
func (m *AutoscalingOptionsUpdateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateImpalaExecutorGroupSets(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AutoscalingOptionsUpdateRequest) contextValidateImpalaExecutorGroupSets(ctx context.Context, formats strfmt.Registry) error {

	if m.ImpalaExecutorGroupSets != nil {

		if swag.IsZero(m.ImpalaExecutorGroupSets) { // not required
			return nil
		}

		if err := m.ImpalaExecutorGroupSets.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("impalaExecutorGroupSets")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("impalaExecutorGroupSets")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AutoscalingOptionsUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AutoscalingOptionsUpdateRequest) UnmarshalBinary(b []byte) error {
	var res AutoscalingOptionsUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
