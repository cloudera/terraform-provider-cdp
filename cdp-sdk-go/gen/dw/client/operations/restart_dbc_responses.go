// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/dw/models"
)

// RestartDbcReader is a Reader for the RestartDbc structure.
type RestartDbcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartDbcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestartDbcOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRestartDbcDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRestartDbcOK creates a RestartDbcOK with default headers values
func NewRestartDbcOK() *RestartDbcOK {
	return &RestartDbcOK{}
}

/*
RestartDbcOK describes a response with status code 200, with default header values.

Expected response to a valid request.
*/
type RestartDbcOK struct {
	Payload models.RestartDbcResponse
}

// IsSuccess returns true when this restart dbc o k response has a 2xx status code
func (o *RestartDbcOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restart dbc o k response has a 3xx status code
func (o *RestartDbcOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restart dbc o k response has a 4xx status code
func (o *RestartDbcOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restart dbc o k response has a 5xx status code
func (o *RestartDbcOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restart dbc o k response a status code equal to that given
func (o *RestartDbcOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restart dbc o k response
func (o *RestartDbcOK) Code() int {
	return 200
}

func (o *RestartDbcOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/dw/restartDbc][%d] restartDbcOK  %+v", 200, o.Payload)
}

func (o *RestartDbcOK) String() string {
	return fmt.Sprintf("[POST /api/v1/dw/restartDbc][%d] restartDbcOK  %+v", 200, o.Payload)
}

func (o *RestartDbcOK) GetPayload() models.RestartDbcResponse {
	return o.Payload
}

func (o *RestartDbcOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartDbcDefault creates a RestartDbcDefault with default headers values
func NewRestartDbcDefault(code int) *RestartDbcDefault {
	return &RestartDbcDefault{
		_statusCode: code,
	}
}

/*
RestartDbcDefault describes a response with status code -1, with default header values.

The default response on an error.
*/
type RestartDbcDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this restart dbc default response has a 2xx status code
func (o *RestartDbcDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this restart dbc default response has a 3xx status code
func (o *RestartDbcDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this restart dbc default response has a 4xx status code
func (o *RestartDbcDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this restart dbc default response has a 5xx status code
func (o *RestartDbcDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this restart dbc default response a status code equal to that given
func (o *RestartDbcDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the restart dbc default response
func (o *RestartDbcDefault) Code() int {
	return o._statusCode
}

func (o *RestartDbcDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/dw/restartDbc][%d] restartDbc default  %+v", o._statusCode, o.Payload)
}

func (o *RestartDbcDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/dw/restartDbc][%d] restartDbc default  %+v", o._statusCode, o.Payload)
}

func (o *RestartDbcDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *RestartDbcDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
