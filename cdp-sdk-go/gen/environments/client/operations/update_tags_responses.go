// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/environments/models"
)

// UpdateTagsReader is a Reader for the UpdateTags structure.
type UpdateTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateTagsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateTagsOK creates a UpdateTagsOK with default headers values
func NewUpdateTagsOK() *UpdateTagsOK {
	return &UpdateTagsOK{}
}

/*
UpdateTagsOK describes a response with status code 200, with default header values.

Expected response to valid request.
*/
type UpdateTagsOK struct {
	Payload *models.UpdateTagsResponse
}

// IsSuccess returns true when this update tags o k response has a 2xx status code
func (o *UpdateTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update tags o k response has a 3xx status code
func (o *UpdateTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update tags o k response has a 4xx status code
func (o *UpdateTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update tags o k response has a 5xx status code
func (o *UpdateTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update tags o k response a status code equal to that given
func (o *UpdateTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update tags o k response
func (o *UpdateTagsOK) Code() int {
	return 200
}

func (o *UpdateTagsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/environments2/updateTags][%d] updateTagsOK %s", 200, payload)
}

func (o *UpdateTagsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/environments2/updateTags][%d] updateTagsOK %s", 200, payload)
}

func (o *UpdateTagsOK) GetPayload() *models.UpdateTagsResponse {
	return o.Payload
}

func (o *UpdateTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateTagsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUpdateTagsDefault creates a UpdateTagsDefault with default headers values
func NewUpdateTagsDefault(code int) *UpdateTagsDefault {
	return &UpdateTagsDefault{
		_statusCode: code,
	}
}

/*
UpdateTagsDefault describes a response with status code -1, with default header values.

The default response on an error.
*/
type UpdateTagsDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this update tags default response has a 2xx status code
func (o *UpdateTagsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update tags default response has a 3xx status code
func (o *UpdateTagsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update tags default response has a 4xx status code
func (o *UpdateTagsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update tags default response has a 5xx status code
func (o *UpdateTagsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update tags default response a status code equal to that given
func (o *UpdateTagsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update tags default response
func (o *UpdateTagsDefault) Code() int {
	return o._statusCode
}

func (o *UpdateTagsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/environments2/updateTags][%d] updateTags default %s", o._statusCode, payload)
}

func (o *UpdateTagsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/environments2/updateTags][%d] updateTags default %s", o._statusCode, payload)
}

func (o *UpdateTagsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTagsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
