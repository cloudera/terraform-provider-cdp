// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CheckKubernetesConnectivityResponse Response object for checking Kubernetes connectivity.
//
// swagger:model CheckKubernetesConnectivityResponse
type CheckKubernetesConnectivityResponse struct {

	// Message explaining the status. Used for Errors.
	Message string `json:"message,omitempty"`

	// Status of Kubernetes cluster. Also indicates connectivity.
	// Required: true
	// Enum: [SUCCESS FAILURE]
	Status *string `json:"status"`
}

// Validate validates this check kubernetes connectivity response
func (m *CheckKubernetesConnectivityResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var checkKubernetesConnectivityResponseTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","FAILURE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		checkKubernetesConnectivityResponseTypeStatusPropEnum = append(checkKubernetesConnectivityResponseTypeStatusPropEnum, v)
	}
}

const (

	// CheckKubernetesConnectivityResponseStatusSUCCESS captures enum value "SUCCESS"
	CheckKubernetesConnectivityResponseStatusSUCCESS string = "SUCCESS"

	// CheckKubernetesConnectivityResponseStatusFAILURE captures enum value "FAILURE"
	CheckKubernetesConnectivityResponseStatusFAILURE string = "FAILURE"
)

// prop value enum
func (m *CheckKubernetesConnectivityResponse) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, checkKubernetesConnectivityResponseTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CheckKubernetesConnectivityResponse) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this check kubernetes connectivity response based on context it is used
func (m *CheckKubernetesConnectivityResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CheckKubernetesConnectivityResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CheckKubernetesConnectivityResponse) UnmarshalBinary(b []byte) error {
	var res CheckKubernetesConnectivityResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
