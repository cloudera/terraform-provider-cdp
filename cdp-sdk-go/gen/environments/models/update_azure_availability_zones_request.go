// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateAzureAvailabilityZonesRequest Request object to update Availability Zones for Azure environment.
//
// swagger:model UpdateAzureAvailabilityZonesRequest
type UpdateAzureAvailabilityZonesRequest struct {

	// List of availability zones for the environment.
	// Required: true
	AvailabilityZones []string `json:"availabilityZones"`

	// The name or CRN of the environment.
	// Required: true
	Environment *string `json:"environment"`
}

// Validate validates this update azure availability zones request
func (m *UpdateAzureAvailabilityZonesRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailabilityZones(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateAzureAvailabilityZonesRequest) validateAvailabilityZones(formats strfmt.Registry) error {

	if err := validate.Required("availabilityZones", "body", m.AvailabilityZones); err != nil {
		return err
	}

	return nil
}

func (m *UpdateAzureAvailabilityZonesRequest) validateEnvironment(formats strfmt.Registry) error {

	if err := validate.Required("environment", "body", m.Environment); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update azure availability zones request based on context it is used
func (m *UpdateAzureAvailabilityZonesRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateAzureAvailabilityZonesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateAzureAvailabilityZonesRequest) UnmarshalBinary(b []byte) error {
	var res UpdateAzureAvailabilityZonesRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
