// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureResourceEncryptionParameters Object containing details of encryption parameters for Azure cloud.
//
// swagger:model AzureResourceEncryptionParameters
type AzureResourceEncryptionParameters struct {

	// ID of the Disk Encryption Set created in Azure which is used to encrypt Managed Disks of FreeIPA, Data Lake, Data Hub and PostgreSQL.
	DiskEncryptionSetID string `json:"diskEncryptionSetId,omitempty"`

	// Name of the existing Azure resource group hosting the Azure Key Vault containing customer managed key which is used to encrypt the Azure Managed Disks.
	EncryptionKeyResourceGroupName string `json:"encryptionKeyResourceGroupName,omitempty"`

	// URL of the key which is used to encrypt the Azure Managed Disks.
	EncryptionKeyURL string `json:"encryptionKeyUrl,omitempty"`
}

// Validate validates this azure resource encryption parameters
func (m *AzureResourceEncryptionParameters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure resource encryption parameters based on context it is used
func (m *AzureResourceEncryptionParameters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureResourceEncryptionParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureResourceEncryptionParameters) UnmarshalBinary(b []byte) error {
	var res AzureResourceEncryptionParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
