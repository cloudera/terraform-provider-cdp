// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureComputeClusterConfigurationRequest Request object for creating Externalized compute cluster for the environment.
//
// swagger:model AzureComputeClusterConfigurationRequest
type AzureComputeClusterConfigurationRequest struct {

	// Kubernetes API authorized IP ranges in CIDR notation. Mutually exclusive with privateCluster.
	KubeAPIAuthorizedIPRanges []string `json:"kubeApiAuthorizedIpRanges"`

	// Customize cluster egress with defined outbound type in Azure Kubernetes Service.
	// Enum: ["udr"]
	OutboundType string `json:"outboundType,omitempty"`

	// If true, creates private cluster
	PrivateCluster bool `json:"privateCluster,omitempty"`

	// Specify subnets for Kubernetes Worker Nodes
	WorkerNodeSubnets []string `json:"workerNodeSubnets"`
}

// Validate validates this azure compute cluster configuration request
func (m *AzureComputeClusterConfigurationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOutboundType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureComputeClusterConfigurationRequestTypeOutboundTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["udr"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureComputeClusterConfigurationRequestTypeOutboundTypePropEnum = append(azureComputeClusterConfigurationRequestTypeOutboundTypePropEnum, v)
	}
}

const (

	// AzureComputeClusterConfigurationRequestOutboundTypeUdr captures enum value "udr"
	AzureComputeClusterConfigurationRequestOutboundTypeUdr string = "udr"
)

// prop value enum
func (m *AzureComputeClusterConfigurationRequest) validateOutboundTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureComputeClusterConfigurationRequestTypeOutboundTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureComputeClusterConfigurationRequest) validateOutboundType(formats strfmt.Registry) error {
	if swag.IsZero(m.OutboundType) { // not required
		return nil
	}

	// value enum
	if err := m.validateOutboundTypeEnum("outboundType", "body", m.OutboundType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this azure compute cluster configuration request based on context it is used
func (m *AzureComputeClusterConfigurationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureComputeClusterConfigurationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureComputeClusterConfigurationRequest) UnmarshalBinary(b []byte) error {
	var res AzureComputeClusterConfigurationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
