// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GcpSecurityAccessRequest Firewall rules for FreeIPA, Data Lake and Data Hub deployment.
//
// swagger:model GcpSecurityAccessRequest
type GcpSecurityAccessRequest struct {

	// Firewall rule for other hosts.
	// Min Length: 1
	DefaultSecurityGroupID string `json:"defaultSecurityGroupId,omitempty"`

	// Firewall rule for Knox hosts.
	// Min Length: 1
	SecurityGroupIDForKnox string `json:"securityGroupIdForKnox,omitempty"`
}

// Validate validates this gcp security access request
func (m *GcpSecurityAccessRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultSecurityGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecurityGroupIDForKnox(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GcpSecurityAccessRequest) validateDefaultSecurityGroupID(formats strfmt.Registry) error {
	if swag.IsZero(m.DefaultSecurityGroupID) { // not required
		return nil
	}

	if err := validate.MinLength("defaultSecurityGroupId", "body", m.DefaultSecurityGroupID, 1); err != nil {
		return err
	}

	return nil
}

func (m *GcpSecurityAccessRequest) validateSecurityGroupIDForKnox(formats strfmt.Registry) error {
	if swag.IsZero(m.SecurityGroupIDForKnox) { // not required
		return nil
	}

	if err := validate.MinLength("securityGroupIdForKnox", "body", m.SecurityGroupIDForKnox, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this gcp security access request based on context it is used
func (m *GcpSecurityAccessRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GcpSecurityAccessRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GcpSecurityAccessRequest) UnmarshalBinary(b []byte) error {
	var res GcpSecurityAccessRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
