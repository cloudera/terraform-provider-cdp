// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SetEnvironmentSettingRequest Request object to set environment configuration settings.
//
// swagger:model SetEnvironmentSettingRequest
type SetEnvironmentSettingRequest struct {

	// The name or CRN of the environment. Empty to set system wide settings.
	EnvironmentName string `json:"environmentName,omitempty"`

	// Dictionary of settings to set.
	// Required: true
	Settings map[string]string `json:"settings"`
}

// Validate validates this set environment setting request
func (m *SetEnvironmentSettingRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SetEnvironmentSettingRequest) validateSettings(formats strfmt.Registry) error {

	if err := validate.Required("settings", "body", m.Settings); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this set environment setting request based on context it is used
func (m *SetEnvironmentSettingRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SetEnvironmentSettingRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SetEnvironmentSettingRequest) UnmarshalBinary(b []byte) error {
	var res SetEnvironmentSettingRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
