// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// FreeIPANodeStatus The status and issues of an individual FreeIPA node.
//
// swagger:model FreeIPANodeStatus
type FreeIPANodeStatus struct {

	// The hostname of the ipa instance.
	// Required: true
	Hostname *string `json:"hostname"`

	// A list of issues the node is having
	Issues []string `json:"issues"`

	// The status of the individual node
	// Required: true
	// Enum: [REQUESTED CREATED UNREGISTERED REGISTERED DECOMMISSIONED TERMINATED DELETED_ON_PROVIDER_SIDE DELETED_BY_PROVIDER FAILED STOPPED REBOOTING UNREACHABLE UNHEALTHY DELETE_REQUESTED]
	Status *string `json:"status"`
}

// Validate validates this free IP a node status
func (m *FreeIPANodeStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHostname(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FreeIPANodeStatus) validateHostname(formats strfmt.Registry) error {

	if err := validate.Required("hostname", "body", m.Hostname); err != nil {
		return err
	}

	return nil
}

var freeIpANodeStatusTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["REQUESTED","CREATED","UNREGISTERED","REGISTERED","DECOMMISSIONED","TERMINATED","DELETED_ON_PROVIDER_SIDE","DELETED_BY_PROVIDER","FAILED","STOPPED","REBOOTING","UNREACHABLE","UNHEALTHY","DELETE_REQUESTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		freeIpANodeStatusTypeStatusPropEnum = append(freeIpANodeStatusTypeStatusPropEnum, v)
	}
}

const (

	// FreeIPANodeStatusStatusREQUESTED captures enum value "REQUESTED"
	FreeIPANodeStatusStatusREQUESTED string = "REQUESTED"

	// FreeIPANodeStatusStatusCREATED captures enum value "CREATED"
	FreeIPANodeStatusStatusCREATED string = "CREATED"

	// FreeIPANodeStatusStatusUNREGISTERED captures enum value "UNREGISTERED"
	FreeIPANodeStatusStatusUNREGISTERED string = "UNREGISTERED"

	// FreeIPANodeStatusStatusREGISTERED captures enum value "REGISTERED"
	FreeIPANodeStatusStatusREGISTERED string = "REGISTERED"

	// FreeIPANodeStatusStatusDECOMMISSIONED captures enum value "DECOMMISSIONED"
	FreeIPANodeStatusStatusDECOMMISSIONED string = "DECOMMISSIONED"

	// FreeIPANodeStatusStatusTERMINATED captures enum value "TERMINATED"
	FreeIPANodeStatusStatusTERMINATED string = "TERMINATED"

	// FreeIPANodeStatusStatusDELETEDONPROVIDERSIDE captures enum value "DELETED_ON_PROVIDER_SIDE"
	FreeIPANodeStatusStatusDELETEDONPROVIDERSIDE string = "DELETED_ON_PROVIDER_SIDE"

	// FreeIPANodeStatusStatusDELETEDBYPROVIDER captures enum value "DELETED_BY_PROVIDER"
	FreeIPANodeStatusStatusDELETEDBYPROVIDER string = "DELETED_BY_PROVIDER"

	// FreeIPANodeStatusStatusFAILED captures enum value "FAILED"
	FreeIPANodeStatusStatusFAILED string = "FAILED"

	// FreeIPANodeStatusStatusSTOPPED captures enum value "STOPPED"
	FreeIPANodeStatusStatusSTOPPED string = "STOPPED"

	// FreeIPANodeStatusStatusREBOOTING captures enum value "REBOOTING"
	FreeIPANodeStatusStatusREBOOTING string = "REBOOTING"

	// FreeIPANodeStatusStatusUNREACHABLE captures enum value "UNREACHABLE"
	FreeIPANodeStatusStatusUNREACHABLE string = "UNREACHABLE"

	// FreeIPANodeStatusStatusUNHEALTHY captures enum value "UNHEALTHY"
	FreeIPANodeStatusStatusUNHEALTHY string = "UNHEALTHY"

	// FreeIPANodeStatusStatusDELETEREQUESTED captures enum value "DELETE_REQUESTED"
	FreeIPANodeStatusStatusDELETEREQUESTED string = "DELETE_REQUESTED"
)

// prop value enum
func (m *FreeIPANodeStatus) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, freeIpANodeStatusTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *FreeIPANodeStatus) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this free IP a node status based on context it is used
func (m *FreeIPANodeStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FreeIPANodeStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FreeIPANodeStatus) UnmarshalBinary(b []byte) error {
	var res FreeIPANodeStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
