// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecurityAccess Security control configuration for FreeIPA and Datalake deployment.
//
// swagger:model SecurityAccess
type SecurityAccess struct {

	// CIDR range which is allowed for inbound traffic. Either IPv4 or IPv6 is allowed.
	Cidr string `json:"cidr,omitempty"`

	// Security group where all other hosts are placed.
	DefaultSecurityGroupID string `json:"defaultSecurityGroupId,omitempty"`

	// Security group where Knox-enabled hosts are placed.
	SecurityGroupIDForKnox string `json:"securityGroupIdForKnox,omitempty"`
}

// Validate validates this security access
func (m *SecurityAccess) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this security access based on context it is used
func (m *SecurityAccess) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SecurityAccess) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecurityAccess) UnmarshalBinary(b []byte) error {
	var res SecurityAccess
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
