// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CredentialGranularPolicyResponse Response object for the granular policy for the given service or experience.
//
// swagger:model CredentialGranularPolicyResponse
type CredentialGranularPolicyResponse struct {

	// The policy JSON encoded in base64.
	// Required: true
	PolicyJSON *string `json:"policyJson"`

	// The name of the service that requires the given policy for resource management.
	// Required: true
	Service *string `json:"service"`
}

// Validate validates this credential granular policy response
func (m *CredentialGranularPolicyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePolicyJSON(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CredentialGranularPolicyResponse) validatePolicyJSON(formats strfmt.Registry) error {

	if err := validate.Required("policyJson", "body", m.PolicyJSON); err != nil {
		return err
	}

	return nil
}

func (m *CredentialGranularPolicyResponse) validateService(formats strfmt.Registry) error {

	if err := validate.Required("service", "body", m.Service); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this credential granular policy response based on context it is used
func (m *CredentialGranularPolicyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CredentialGranularPolicyResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialGranularPolicyResponse) UnmarshalBinary(b []byte) error {
	var res CredentialGranularPolicyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
