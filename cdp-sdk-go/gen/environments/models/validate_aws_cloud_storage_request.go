// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ValidateAwsCloudStorageRequest Request object for AWS environment cloud storage validation.
//
// swagger:model ValidateAwsCloudStorageRequest
type ValidateAwsCloudStorageRequest struct {

	// The CRN of the credential.
	// Required: true
	CredentialCrn *string `json:"credentialCrn"`

	// AWS instance profile.
	// Required: true
	InstanceProfile *string `json:"instanceProfile"`

	// AWS S3 storage bucket location for logging.
	// Required: true
	StorageLocation *string `json:"storageLocation"`
}

// Validate validates this validate aws cloud storage request
func (m *ValidateAwsCloudStorageRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredentialCrn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageLocation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ValidateAwsCloudStorageRequest) validateCredentialCrn(formats strfmt.Registry) error {

	if err := validate.Required("credentialCrn", "body", m.CredentialCrn); err != nil {
		return err
	}

	return nil
}

func (m *ValidateAwsCloudStorageRequest) validateInstanceProfile(formats strfmt.Registry) error {

	if err := validate.Required("instanceProfile", "body", m.InstanceProfile); err != nil {
		return err
	}

	return nil
}

func (m *ValidateAwsCloudStorageRequest) validateStorageLocation(formats strfmt.Registry) error {

	if err := validate.Required("storageLocation", "body", m.StorageLocation); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this validate aws cloud storage request based on context it is used
func (m *ValidateAwsCloudStorageRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ValidateAwsCloudStorageRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ValidateAwsCloudStorageRequest) UnmarshalBinary(b []byte) error {
	var res ValidateAwsCloudStorageRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
