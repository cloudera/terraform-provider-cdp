// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpscaleFreeipaResponse The response object for FreeIPA upscale.
//
// swagger:model UpscaleFreeipaResponse
type UpscaleFreeipaResponse struct {

	// UUID of the request for this operation. This ID can be used to get the status of the operation.
	OperationID string `json:"operationId,omitempty"`

	// The original FreeIPA availability type.
	// Enum: [NON_HA TWO_NODE_BASED]
	OriginalAvailabilityType string `json:"originalAvailabilityType,omitempty"`

	// The target FreeIPA availability type.
	// Enum: [HA]
	TargetAvailabilityType string `json:"targetAvailabilityType,omitempty"`
}

// Validate validates this upscale freeipa response
func (m *UpscaleFreeipaResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOriginalAvailabilityType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetAvailabilityType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var upscaleFreeipaResponseTypeOriginalAvailabilityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NON_HA","TWO_NODE_BASED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		upscaleFreeipaResponseTypeOriginalAvailabilityTypePropEnum = append(upscaleFreeipaResponseTypeOriginalAvailabilityTypePropEnum, v)
	}
}

const (

	// UpscaleFreeipaResponseOriginalAvailabilityTypeNONHA captures enum value "NON_HA"
	UpscaleFreeipaResponseOriginalAvailabilityTypeNONHA string = "NON_HA"

	// UpscaleFreeipaResponseOriginalAvailabilityTypeTWONODEBASED captures enum value "TWO_NODE_BASED"
	UpscaleFreeipaResponseOriginalAvailabilityTypeTWONODEBASED string = "TWO_NODE_BASED"
)

// prop value enum
func (m *UpscaleFreeipaResponse) validateOriginalAvailabilityTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, upscaleFreeipaResponseTypeOriginalAvailabilityTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpscaleFreeipaResponse) validateOriginalAvailabilityType(formats strfmt.Registry) error {
	if swag.IsZero(m.OriginalAvailabilityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateOriginalAvailabilityTypeEnum("originalAvailabilityType", "body", m.OriginalAvailabilityType); err != nil {
		return err
	}

	return nil
}

var upscaleFreeipaResponseTypeTargetAvailabilityTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		upscaleFreeipaResponseTypeTargetAvailabilityTypePropEnum = append(upscaleFreeipaResponseTypeTargetAvailabilityTypePropEnum, v)
	}
}

const (

	// UpscaleFreeipaResponseTargetAvailabilityTypeHA captures enum value "HA"
	UpscaleFreeipaResponseTargetAvailabilityTypeHA string = "HA"
)

// prop value enum
func (m *UpscaleFreeipaResponse) validateTargetAvailabilityTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, upscaleFreeipaResponseTypeTargetAvailabilityTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UpscaleFreeipaResponse) validateTargetAvailabilityType(formats strfmt.Registry) error {
	if swag.IsZero(m.TargetAvailabilityType) { // not required
		return nil
	}

	// value enum
	if err := m.validateTargetAvailabilityTypeEnum("targetAvailabilityType", "body", m.TargetAvailabilityType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this upscale freeipa response based on context it is used
func (m *UpscaleFreeipaResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpscaleFreeipaResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpscaleFreeipaResponse) UnmarshalBinary(b []byte) error {
	var res UpscaleFreeipaResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
