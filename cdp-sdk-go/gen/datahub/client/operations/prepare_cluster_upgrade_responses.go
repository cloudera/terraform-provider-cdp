// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudera/terraform-provider-cdp/cdp-sdk-go/gen/datahub/models"
)

// PrepareClusterUpgradeReader is a Reader for the PrepareClusterUpgrade structure.
type PrepareClusterUpgradeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PrepareClusterUpgradeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPrepareClusterUpgradeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPrepareClusterUpgradeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPrepareClusterUpgradeOK creates a PrepareClusterUpgradeOK with default headers values
func NewPrepareClusterUpgradeOK() *PrepareClusterUpgradeOK {
	return &PrepareClusterUpgradeOK{}
}

/*
PrepareClusterUpgradeOK describes a response with status code 200, with default header values.

Expected response to a valid request.
*/
type PrepareClusterUpgradeOK struct {
	Payload *models.PrepareClusterUpgradeResponse
}

// IsSuccess returns true when this prepare cluster upgrade o k response has a 2xx status code
func (o *PrepareClusterUpgradeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this prepare cluster upgrade o k response has a 3xx status code
func (o *PrepareClusterUpgradeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this prepare cluster upgrade o k response has a 4xx status code
func (o *PrepareClusterUpgradeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this prepare cluster upgrade o k response has a 5xx status code
func (o *PrepareClusterUpgradeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this prepare cluster upgrade o k response a status code equal to that given
func (o *PrepareClusterUpgradeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the prepare cluster upgrade o k response
func (o *PrepareClusterUpgradeOK) Code() int {
	return 200
}

func (o *PrepareClusterUpgradeOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/datahub/prepareClusterUpgrade][%d] prepareClusterUpgradeOK  %+v", 200, o.Payload)
}

func (o *PrepareClusterUpgradeOK) String() string {
	return fmt.Sprintf("[POST /api/v1/datahub/prepareClusterUpgrade][%d] prepareClusterUpgradeOK  %+v", 200, o.Payload)
}

func (o *PrepareClusterUpgradeOK) GetPayload() *models.PrepareClusterUpgradeResponse {
	return o.Payload
}

func (o *PrepareClusterUpgradeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrepareClusterUpgradeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPrepareClusterUpgradeDefault creates a PrepareClusterUpgradeDefault with default headers values
func NewPrepareClusterUpgradeDefault(code int) *PrepareClusterUpgradeDefault {
	return &PrepareClusterUpgradeDefault{
		_statusCode: code,
	}
}

/*
PrepareClusterUpgradeDefault describes a response with status code -1, with default header values.

The default response on an error.
*/
type PrepareClusterUpgradeDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this prepare cluster upgrade default response has a 2xx status code
func (o *PrepareClusterUpgradeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this prepare cluster upgrade default response has a 3xx status code
func (o *PrepareClusterUpgradeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this prepare cluster upgrade default response has a 4xx status code
func (o *PrepareClusterUpgradeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this prepare cluster upgrade default response has a 5xx status code
func (o *PrepareClusterUpgradeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this prepare cluster upgrade default response a status code equal to that given
func (o *PrepareClusterUpgradeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the prepare cluster upgrade default response
func (o *PrepareClusterUpgradeDefault) Code() int {
	return o._statusCode
}

func (o *PrepareClusterUpgradeDefault) Error() string {
	return fmt.Sprintf("[POST /api/v1/datahub/prepareClusterUpgrade][%d] prepareClusterUpgrade default  %+v", o._statusCode, o.Payload)
}

func (o *PrepareClusterUpgradeDefault) String() string {
	return fmt.Sprintf("[POST /api/v1/datahub/prepareClusterUpgrade][%d] prepareClusterUpgrade default  %+v", o._statusCode, o.Payload)
}

func (o *PrepareClusterUpgradeDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PrepareClusterUpgradeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
