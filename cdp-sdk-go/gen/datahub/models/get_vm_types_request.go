// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetVMTypesRequest Request object for fetching the available virtual machine types based on the given parameters.
//
// swagger:model GetVmTypesRequest
type GetVMTypesRequest struct {

	// The selected availability zone.
	AvailabilityZone string `json:"availabilityZone,omitempty"`

	// The name of the cluster definition.
	ClusterDefinitionName string `json:"clusterDefinitionName,omitempty"`

	// The name of the given cluster template.
	// Required: true
	ClusterTemplate *string `json:"clusterTemplate"`

	// The name or CRN of the credential that is required to access the cloud provider.
	// Required: true
	Credential *string `json:"credential"`

	// The region where we should look for the supported VM types.
	// Required: true
	Region *string `json:"region"`
}

// Validate validates this get Vm types request
func (m *GetVMTypesRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClusterTemplate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCredential(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetVMTypesRequest) validateClusterTemplate(formats strfmt.Registry) error {

	if err := validate.Required("clusterTemplate", "body", m.ClusterTemplate); err != nil {
		return err
	}

	return nil
}

func (m *GetVMTypesRequest) validateCredential(formats strfmt.Registry) error {

	if err := validate.Required("credential", "body", m.Credential); err != nil {
		return err
	}

	return nil
}

func (m *GetVMTypesRequest) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get Vm types request based on context it is used
func (m *GetVMTypesRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetVMTypesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetVMTypesRequest) UnmarshalBinary(b []byte) error {
	var res GetVMTypesRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
