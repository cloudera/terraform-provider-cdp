// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOperationResponse Response object for tracking the latest (current/last) operation on the datahub resource.
//
// swagger:model GetOperationResponse
type GetOperationResponse struct {

	// Identifier of the operation.
	OperationID string `json:"operationId,omitempty"`

	// Status of the operation.
	// Enum: [UNKNOWN RUNNING FAILED FINISHED CANCELLED]
	OperationStatus string `json:"operationStatus,omitempty"`

	// Type of the operation.
	OperationType string `json:"operationType,omitempty"`

	// Progress percentage of the operation.
	Progress int32 `json:"progress,omitempty"`
}

// Validate validates this get operation response
func (m *GetOperationResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOperationStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getOperationResponseTypeOperationStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UNKNOWN","RUNNING","FAILED","FINISHED","CANCELLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getOperationResponseTypeOperationStatusPropEnum = append(getOperationResponseTypeOperationStatusPropEnum, v)
	}
}

const (

	// GetOperationResponseOperationStatusUNKNOWN captures enum value "UNKNOWN"
	GetOperationResponseOperationStatusUNKNOWN string = "UNKNOWN"

	// GetOperationResponseOperationStatusRUNNING captures enum value "RUNNING"
	GetOperationResponseOperationStatusRUNNING string = "RUNNING"

	// GetOperationResponseOperationStatusFAILED captures enum value "FAILED"
	GetOperationResponseOperationStatusFAILED string = "FAILED"

	// GetOperationResponseOperationStatusFINISHED captures enum value "FINISHED"
	GetOperationResponseOperationStatusFINISHED string = "FINISHED"

	// GetOperationResponseOperationStatusCANCELLED captures enum value "CANCELLED"
	GetOperationResponseOperationStatusCANCELLED string = "CANCELLED"
)

// prop value enum
func (m *GetOperationResponse) validateOperationStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getOperationResponseTypeOperationStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GetOperationResponse) validateOperationStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.OperationStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateOperationStatusEnum("operationStatus", "body", m.OperationStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get operation response based on context it is used
func (m *GetOperationResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetOperationResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetOperationResponse) UnmarshalBinary(b []byte) error {
	var res GetOperationResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
