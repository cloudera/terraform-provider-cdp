// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListInstanceTypeConfigurationRequest Request object for the ListInstanceTypeConfiguration method.
//
// swagger:model ListInstanceTypeConfigurationRequest
type ListInstanceTypeConfigurationRequest struct {

	// Identifies the cloud provider (e.g., AWS, Azure) for which to list supported instances.
	// Required: true
	CloudProvider *string `json:"cloudProvider"`

	// Defines the category of the instance (e.g., CPU, GPU) relevant for the query in the specified region.
	// Required: true
	InstanceCategory *string `json:"instanceCategory"`

	// Identifies the instance type.
	// Required: true
	InstanceType *string `json:"instanceType"`

	// Specifies the name of the region for which instance support details are requested.
	// Required: true
	Region *string `json:"region"`
}

// Validate validates this list instance type configuration request
func (m *ListInstanceTypeConfigurationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloudProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstanceType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListInstanceTypeConfigurationRequest) validateCloudProvider(formats strfmt.Registry) error {

	if err := validate.Required("cloudProvider", "body", m.CloudProvider); err != nil {
		return err
	}

	return nil
}

func (m *ListInstanceTypeConfigurationRequest) validateInstanceCategory(formats strfmt.Registry) error {

	if err := validate.Required("instanceCategory", "body", m.InstanceCategory); err != nil {
		return err
	}

	return nil
}

func (m *ListInstanceTypeConfigurationRequest) validateInstanceType(formats strfmt.Registry) error {

	if err := validate.Required("instanceType", "body", m.InstanceType); err != nil {
		return err
	}

	return nil
}

func (m *ListInstanceTypeConfigurationRequest) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list instance type configuration request based on context it is used
func (m *ListInstanceTypeConfigurationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ListInstanceTypeConfigurationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListInstanceTypeConfigurationRequest) UnmarshalBinary(b []byte) error {
	var res ListInstanceTypeConfigurationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
