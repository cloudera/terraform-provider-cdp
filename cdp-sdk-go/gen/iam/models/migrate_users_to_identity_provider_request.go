// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MigrateUsersToIdentityProviderRequest Request object for migrating users from an Identity Provider Connector to a new one.
//
// swagger:model MigrateUsersToIdentityProviderRequest
type MigrateUsersToIdentityProviderRequest struct {

	// The name or CRN of the new IdP provider to migrate to.
	// Required: true
	NewProviderName *string `json:"newProviderName"`

	// The name or CRN of the original IdP provider to migrate from.
	// Required: true
	OriginalProviderName *string `json:"originalProviderName"`
}

// Validate validates this migrate users to identity provider request
func (m *MigrateUsersToIdentityProviderRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNewProviderName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalProviderName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MigrateUsersToIdentityProviderRequest) validateNewProviderName(formats strfmt.Registry) error {

	if err := validate.Required("newProviderName", "body", m.NewProviderName); err != nil {
		return err
	}

	return nil
}

func (m *MigrateUsersToIdentityProviderRequest) validateOriginalProviderName(formats strfmt.Registry) error {

	if err := validate.Required("originalProviderName", "body", m.OriginalProviderName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this migrate users to identity provider request based on context it is used
func (m *MigrateUsersToIdentityProviderRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MigrateUsersToIdentityProviderRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MigrateUsersToIdentityProviderRequest) UnmarshalBinary(b []byte) error {
	var res MigrateUsersToIdentityProviderRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
